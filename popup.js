// 當彈出視窗載入時執行
document.addEventListener('DOMContentLoaded', async () => {
  const message = document.getElementById('message');
  const downloadSection = document.getElementById('download-section');
  const languageSelect = document.getElementById('language-select');
  const formatSelect = document.getElementById('format-select');
  const downloadBtn = document.getElementById('download-btn');
  const optionsBtn = document.getElementById('options-btn');

  // 檢查當前標籤是否為YouTube影片頁面
  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });
  
  // 確認是否在YouTube影片頁面
  if (!tab.url) {
    message.textContent = '無法取得頁面資訊';
    message.classList.add('error');
    downloadSection.classList.add('hidden');
    return;
  }

  try {
    const url = new URL(tab.url);
    const isYouTubeVideo = url.hostname.includes('youtube.com') &&
                          url.pathname === '/watch' &&
                          url.searchParams.has('v');
    
    if (!isYouTubeVideo) {
      message.textContent = '請前往YouTube影片頁面';
      message.classList.add('error');
      downloadSection.classList.add('hidden');
      return;
    }
  } catch (error) {
    message.textContent = '無效的頁面網址';
    message.classList.add('error');
    downloadSection.classList.add('hidden');
    return;
  }

  // 向content script發送消息以獲取字幕列表
  try {
    const response = await chrome.tabs.sendMessage(tab.id, { action: 'getSubtitles' });
    console.log('獲取到的字幕資訊:', response);

    if (!response || !response.subtitles || response.subtitles.length === 0) {
      message.textContent = '此影片沒有可用的字幕';
      message.classList.add('error');
      downloadSection.classList.add('hidden');
      return;
    }

    // 顯示下載區域
    downloadSection.classList.remove('hidden');
    message.textContent = '請選擇字幕語言和格式';
    message.classList.remove('error');

    // 清空現有的選項
    languageSelect.innerHTML = '<option value="">選擇字幕語言</option>';

    // 每次打開popup時都讀取最新設定
    console.log('正在讀取最新設定...');
    let options;
    try {
      // 首先讀取全域設定
      options = await chrome.storage.sync.get({
        defaultFormat: 'srt',
        defaultLanguage: 'auto',
        includeAutoSubs: true
      });
      
      console.log('從 sync storage 讀取的最新設定:', options);
      
      // 強制使用預設格式，不保存到本地
      formatSelect.value = options.defaultFormat;
      console.log('已設定格式為預設值:', options.defaultFormat);
    } catch (error) {
      console.error('讀取設定時發生錯誤:', error);
      // 使用 srt 作為後備格式
      formatSelect.value = 'srt';
      options = { includeAutoSubs: false };
    }

    // 根據設定過濾並填充語言選項
    response.subtitles
      .filter(subtitle => options.includeAutoSubs || !subtitle.isAutoGenerated)
      .forEach(subtitle => {
        const option = document.createElement('option');
        option.value = JSON.stringify({
          languageCode: subtitle.languageCode,
          baseUrl: subtitle.baseUrl
        });
        option.textContent = `${subtitle.languageName}${subtitle.isAutoGenerated ? ' (自動生成)' : ''}`;
        languageSelect.appendChild(option);
      });
    console.log('正在讀取最新設定...');
    try {
      // 首先讀取全域設定
      const options = await chrome.storage.sync.get({
        defaultFormat: 'srt',
        defaultLanguage: 'auto',
        includeAutoSubs: false
      });
      
      console.log('從 sync storage 讀取的最新設定:', options);
      
      // 強制使用預設格式，不保存到本地
      formatSelect.value = options.defaultFormat;
      console.log('已設定格式為預設值:', options.defaultFormat);
    } catch (error) {
      console.error('讀取設定時發生錯誤:', error);
      // 使用 srt 作為後備格式
      formatSelect.value = 'srt';
    }

  } catch (error) {
    message.textContent = '無法獲取字幕資訊，請重新整理頁面後再試';
    message.classList.add('error');
    downloadSection.classList.add('hidden');
    console.error('Error:', error);
    return;
  }

  // 下載按鈕點擊事件
  downloadBtn.addEventListener('click', async () => {
    const selectedValue = languageSelect.value;
    const format = formatSelect.value;

    if (!selectedValue) {
      message.textContent = '請選擇字幕語言';
      message.classList.add('error');
      return;
    }

    const { languageCode, baseUrl } = JSON.parse(selectedValue);

    // 儲存格式選擇
    chrome.storage.local.set({ format });

    // 顯示下載中狀態
    downloadBtn.disabled = true;
    message.textContent = '下載中...';
    message.classList.remove('error');

    try {
      console.log('開始下載字幕:', {
        languageCode,
        format,
        baseUrl
      });
      
      // 向background script發送下載請求
      const result = await chrome.runtime.sendMessage({
        action: 'downloadSubtitle',
        payload: {
          videoId: new URLSearchParams(new URL(tab.url).search).get('v'),
          languageCode,
          baseUrl,
          format
        }
      });

      console.log('下載結果:', result);

      if (result.success) {
        const { downloadPath = 'Downloads/YouTube字幕' } = await chrome.storage.sync.get('downloadPath');
        message.textContent = `下載完成！已儲存至 ${downloadPath} 資料夾`;
      } else {
        console.error('下載失敗:', result.error);
        throw new Error(result.error || '下載失敗');
      }
      
      message.classList.add('success');
    } catch (error) {
      message.textContent = '下載失敗，請重試';
      message.classList.add('error');
      console.error('Download error:', error);
    } finally {
      downloadBtn.disabled = false;
    }
  });

  // 設定按鈕點擊事件
  optionsBtn.addEventListener('click', () => {
    chrome.runtime.openOptionsPage();
  });

  // 監聽來自背景腳本的設定更新消息
  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    console.log('Popup 收到消息:', request);
    
    if (request.action === 'settingsChanged' && request.options && request.options.defaultFormat) {
      console.log('套用新的預設格式:', request.options.defaultFormat);
      formatSelect.value = request.options.defaultFormat;
    }
  });
});