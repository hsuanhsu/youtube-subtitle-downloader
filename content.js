// 用於儲存目前影片的字幕資訊
let currentSubtitles = null;

// 監聽來自popup.js的消息
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === 'getSubtitles') {
    getSubtitles().then(subtitles => {
      sendResponse({ subtitles });
    });
    return true; // 表示會異步發送回應
  }
});

// 從YouTube頁面提取字幕資訊
async function getSubtitles() {
  try {
    // 等待播放器載入
    await waitForElement('video');

    // 獲取影片ID
    const videoId = new URLSearchParams(window.location.search).get('v');
    if (!videoId) {
      throw new Error('無法獲取影片ID');
    }

    // 獲取字幕軌道列表
    const response = await fetch(`https://www.youtube.com/watch?v=${videoId}`);
    const html = await response.text();

    // 從視頻頁面的初始數據中提取字幕信息
    const ytInitialDataMatch = html.match(/ytInitialPlayerResponse\s*=\s*({.+?});/);
    if (!ytInitialDataMatch) {
      console.error('找不到 ytInitialPlayerResponse');
      throw new Error('無法獲取影片資訊');
    }

    const ytInitialData = JSON.parse(ytInitialDataMatch[1]);
    console.log('解析到的 ytInitialData:', {
      hasCaptions: !!ytInitialData.captions,
      captionsData: ytInitialData.captions
    });
    
    const captions = ytInitialData.captions;
    
    if (!captions || !captions.playerCaptionsTracklistRenderer) {
      console.log('無字幕資訊:', { captions });
      return []; // 沒有字幕
    }

    const captionTracks = captions.playerCaptionsTracklistRenderer.captionTracks || [];
    
    // 格式化字幕資訊
    const subtitles = captionTracks.map(track => ({
      languageCode: track.languageCode,
      languageName: track.name.simpleText || track.name.runs[0].text,
      baseUrl: track.baseUrl,
      kind: track.kind,
      isAutoGenerated: track.kind === 'asr'
    }));

    currentSubtitles = subtitles;
    console.log('找到的字幕:', subtitles);
    return subtitles;

  } catch (error) {
    console.error('獲取字幕資訊時發生錯誤:', error);
    return [];
  }
}

// 等待特定元素載入
function waitForElement(selector, timeout = 10000) {
  return new Promise((resolve, reject) => {
    const startTime = Date.now();

    function checkElement() {
      const element = document.querySelector(selector);
      if (element) {
        resolve(element);
        return;
      }

      if (Date.now() - startTime >= timeout) {
        reject(new Error(`等待元素 ${selector} 超時`));
        return;
      }

      requestAnimationFrame(checkElement);
    }

    checkElement();
  });
}

// 當頁面載入完成時，預先獲取字幕資訊
document.addEventListener('DOMContentLoaded', () => {
  getSubtitles().catch(console.error);
});

// 監聽URL變化
let lastUrl = location.href;
new MutationObserver(() => {
  const url = location.href;
  if (url !== lastUrl) {
    lastUrl = url;
    currentSubtitles = null;
    getSubtitles().catch(console.error);
  }
}).observe(document, { subtree: true, childList: true });